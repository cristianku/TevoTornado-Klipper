# Tevo Tornado (with BLTouch, 3 TMC2208 in UART mode on XYZ and 1 LV8729 on E) configuration file
# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though other AVR chips are also possible).

# See the example.cfg file for a description of available parameters.

[servo bltouch]
pin: ar11
maximum_servo_angle: 180
minimum_pulse_width: 0.0006
maximum_pulse_width: 0.0024

[probe]
pin: ar18
z_offset: 0.80
activate_gcode:
    SET_SERVO SERVO=bltouch ANGLE=10
    SET_SERVO SERVO=bltouch ANGLE=60
    G4 P200
deactivate_gcode:
    SET_SERVO SERVO=bltouch ANGLE=90
    G4 P100

[homing_override]
set_position_z: 15
axes: z
gcode:
    G90
    G1 Z30 F480
    G28 X0 Y0
    G1 X194 Y162 F3600
    G28 Z0
    G1 Z15 F480

[bed_mesh]
speed: 150
horizontal_move_z: 5
min_point: 50,30
max_point: 300,290
probe_count: 3,3
mesh_pps: 2,2

[stepper_x]
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
# For TMC2208 at 1/16 microsteps with 80 steps/mm
# Don't use a calibrated value, use the theorical value only otherwise 
# the TMC2208 may stop working while printing
step_distance: .0125
endstop_pin: ^!ar3
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
# For TMC2208 at 1/16 microsteps with 80 steps/mm
# Don't use a calibrated value, use the theorical value only otherwise 
# the TMC2208 may stop working while printing
step_distance: .0125
endstop_pin: ^!ar14
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: ar46
dir_pin: ar48
enable_pin: !ar62
# For TMC2208 at 1/16 microsteps with 400 steps/mm
# Don't use a calibrated value, use the theorical value only otherwise 
# the TMC2208 may stop working while printing
step_distance: .0025
endstop_pin: probe:z_virtual_endstop
position_max: 390

# TMC2208 UART configuration
[tmc2208 stepper_x]
uart_pin: ar63
tx_pin: ar40
microsteps: 16
run_current: 0.600
stealthchop_threshold: 250

[tmc2208 stepper_y]
uart_pin: ar64
tx_pin: ar59
microsteps: 16
run_current: 0.600
stealthchop_threshold: 250

[tmc2208 stepper_z]
uart_pin: ar65
tx_pin: ar42
microsteps: 16
run_current: 0.600
stealthchop_threshold: 30

[extruder]
step_pin: ar26
# For LV8729 dir_pin is reversed
dir_pin: ar28
enable_pin: !ar24
# For LV8729 at 1/32 with 800 steps/mm
step_distance: .00125
nozzle_diameter: 0.400
filament_diameter: 1.750
# Simplify3D needs a high cross section for rafts
max_extrude_cross_section: 2
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 21.169
pid_Ki: 1.111
pid_Kd: 100.817
min_temp: 0
max_temp: 250

[heater_fan extruder_fan]
pin: ar7
heater: extruder
heater_temp: 50.0

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: pid
pid_Kp: 56.401
pid_Ki: 1.649
pid_Kd: 482.228
min_temp: 0
max_temp: 130

[fan]
pin: ar9

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
pin_map: arduino

[printer]
# Need to increase this buffer because at the end of the Benchy boat test,
# the toolhead pause 1 second when printing circles, causing big clogs on the print. 15 is not enough so we use 30
buffer_time_high: 30
kinematics: cartesian
max_velocity: 250
max_z_velocity: 30
max_accel: 2000
max_z_accel: 120

[virtual_sdcard]
path: ~/.octoprint/uploads/

# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
[display]
lcd_type: st7920
cs_pin: ar16
sclk_pin: ar23
sid_pin: ar17

[gcode_macro G80]
gcode:
 BED_MESH_CALIBRATE
 G1 X194 Y162 F3600
 
[gcode_macro G81]
gcode:
 BED_MESH_OUTPUT